# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

# Theme
set $gnome-schema org.gnome.desktop.interface

exec_always {
    gsettings set $gnome-schema gtk-theme 'Adwaita-dark'
    gsettings set $gnome-schema icon-theme 'Adwaita-dark'
    gsettings set $gnome-schema cursor-theme 'Adwaita-dark'
    gsettings set $gnome-schema font-name 'ttf-font-awesome'
}

# Font
font pango:SourceCodePro Medium 11

### Colors
set $color_fg           #004675
set $color_fg_rgba      0070117
set $color_bg           #1a1a1a
set $color_bg_rgba      191919
set $color_cursor       #c5c8c6

set $color_color0       #1d1f21
set $color_color8       #969896

set $color_color1       #cc6666
set $color_color9       #cc6666

set $color_color2       #b5bd68
set $color_color10      #b5bd68

set $color_color3       #f0c674
set $color_color11      #f0c674

set $color_color4       #81a2be
set $color_color12      #81a2be

set $color_color5       #b294bb
set $color_color13      #b294bb

set $color_color6       #8abeb7
set $color_color14      #8abeb7

set $color_color7       #c5c8c6
set $color_color15      #ffffff

#       border   The border around the title bar.
#   background   The background of the title bar.
#         text   The text color of the title bar.
#    indicator   The color used to indicate where a new view will open.
#                In a tiled container, this would paint the right border
#                of the current view if a new view would be opened to the right.
# child_border   The border around the view itself.

#                       border         background      text            indicator         child_border
client.focused          $color_color4  $color_bg       $color_cursor   $color_bg         $color_color4
client.focused_inactive $color_bg      $color_bg       $color_cursor   $color_bg         $color_bg
client.unfocused        $color_bg      $color_bg       $color_cursor   $color_bg         $color_bg
client.urgent           $color_bg      $color_bg       $color_cursor   $color_bg         $color_bg
client.placeholder      $color_bg      $color_bg       $color_cursor   $color_bg         $color_bg
client.background       $color_bg

titlebar_border_thickness 4
default_border normal 4
focus_follows_mouse no

### Variables
#
# caps key as mod.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
set $wallpaper ~/.config/_resources/wallpaper.png

# Apps
set $lock swaylock --daemonize --image $wallpaper --scaling fit --color $color_bg_rgba
set $term alacritty
set $bar waybar
set $sysmonitor "$term -e btm"
set $snippingtool grim -g "$(slurp)" - | wl-copy

# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu bemenu-run --width-factor 0.5 --list 10 --ignorecase --wrap | xargs swaymsg exec --

# App Configs
for_window [title="^FreeRDP"] move to workspace 4; floating enable; floating_modifier none
for_window [app_id=com.github.wwmm.easyeffects] floating enable

### Output configuration
output * bg $wallpaper fit $color_bg

# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
exec swayidle -w \
        timeout 1800 '$lock' \
        timeout 10 'if pgrep swaylock; then swaymsg "output * dpms off"; fi' \
          resume 'swaymsg "output * dpms on"' \
        before-sleep '$lock'

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
input type:keyboard {
    xkb_layout us,se
    xkb_options grp:alt_shift_toggle,caps:super
    repeat_delay 175
    repeat_rate 75
}

### Key bindings
#
# Basics:
#
    # Switch keyboard layout
    #bindsym $mod+Ctrl+Alt+space input type:keyboard xkb_switch_layout next # fixed by https://github.com/swaywm/sway/pull/6966 and available in next after sway 1.7

    # Start a terminal
    bindsym $mod+Return exec $term

    # Start system monitor
    bindsym $mod+Escape exec $sysmonitor

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym Alt+Space exec $menu

    # Start snipping tool
    bindsym $mod+G exec $snippingtool

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

    # Lock screen
    bindsym $mod+Ctrl+Alt+l exec $lock
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Gaps:
#
gaps inner 10
gaps outer -4
#smart_gaps on
# Press $mod+Shift+g to enter the gap mode.
# Choose o or i for modifying outer/inner gaps.
# Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace).
# If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
  bindsym o      mode "$mode_gaps_outer"
  bindsym i      mode "$mode_gaps_inner"
  bindsym Return mode "default"
  bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
  bindsym plus  gaps inner current plus 5
  bindsym minus gaps inner current minus 5
  bindsym 0     gaps inner current set 0

  bindsym Shift+plus  gaps inner all plus 5
  bindsym Shift+minus gaps inner all minus 5
  bindsym Shift+0     gaps inner all set 0

  bindsym Return mode "default"
  bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
  bindsym plus  gaps outer current plus 5
  bindsym minus gaps outer current minus 5
  bindsym 0     gaps outer current set 0

  bindsym Shift+plus  gaps outer all plus 5
  bindsym Shift+minus gaps outer all minus 5
  bindsym Shift+0     gaps outer all set 0

  bindsym Return mode "default"
  bindsym Escape mode "default"
}

#
# Status Bar:
#
bar {
  swaybar_command $bar
}

include /etc/sway/config.d/*
