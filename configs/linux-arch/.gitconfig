[user]
    email = helmesjo@gmail.com
    name = helmesjo

[includeIf "hasconfig:remote.*.url:https://*@dev.azure.com/*/*/_git/*"]
    path = ~/.gitconfig.azure

[core]
    editor = hx
    pager = delta
    symlinks = true
    autocrlf = input
    filemode = true
    eol = lf
    longpaths = true

[credential "https://dev.azure.com"]
    useHttpPath = true

[interactive]
    diffFilter = delta --color-only

[merge]
    conflictstyle = diff3

[diff]
    colorMoved = default

[delta]
    features = side-by-side line-numbers decorations
    syntax-theme = Dracula
    plus-style = syntax "#003800"
    minus-style = syntax "#3f0001"

[delta "decorations"]
    commit-decoration-style = bold yellow box ul
    file-style = bold yellow ul
    file-decoration-style = none
    hunk-header-decoration-style = cyan box ul

[delta "line-numbers"]
    line-numbers-left-style = cyan
    line-numbers-right-style = cyan
    line-numbers-minus-style = 124
    line-numbers-plus-style = 28
[pull]
    rebase = true

[include]
    path = ~/.gitconfig.local

[alias]
    a = add
    ap = add --patch
    ba = branch --all
    # branch-prune-stale (local without remote)
    bps = "!for branch in $(git for-each-ref --format '%(refname) %(upstream:track)' refs/heads | awk '$2 == \"[gone]\" {sub(\"refs/heads/\", \"\", $1); print $1}'); do echo \"> git branch -D $branch\" && read -p \"  ^ Proceed? [Y/n]: \" -r && [[ $REPLY =~ ^[Yy]$ ]] && git branch -D $branch && echo || true; done"
    c = commit
    cne = commit --amend --no-edit
    ca = commit --all
    cane = commit --all --amend --no-edit
    co = checkout
    cop = checkout --patch
    d = diff
    dc = diff --cached
    # log (pretty-log HEAD if not default branch, else default..HEAD/last-arg)
    l = "!f() { \
        if [ $# -ge 1 ]; then \
            OPTS=\"$(printf '%s ' \"${@:1:$(($#-1))}\")\"; \
            HEAD=\"${@: -1}\"; \
            if ! git rev-parse --verify $HEAD >/dev/null 2>&1; then \
              OPTS=\"$OPTS $HEAD\"; \
              HEAD=; \
            fi; \
        fi; \
        HEAD=${HEAD:-$(git rev-parse --abbrev-ref HEAD >/dev/null 2>&1)}; \
        MAIN=$(git symbolic-ref refs/remotes/origin/HEAD >/dev/null 2>&1); \
        MAIN=${MAIN:-$HEAD}; \
        MAIN=${MAIN##*/}; \
        COMP=$([[ $HEAD == $MAIN ]] && echo $HEAD || echo $MAIN..$HEAD); \
        git log --pretty=format:\"%C(2)%cd %C(auto)%h%C(auto)%d %C(auto)%s\" --date=short $OPTS $COMP; \
    }; f"
    ps = push
    psf = "!read -p \"Force push? [Y/n]: \" -r && [[ $REPLY =~ ^[Yy]$ ]] && git ps --force || true"
    psu = "!git push --set-upstream origin \"$(git rev-parse --abbrev-ref HEAD)\""
    pl = pull -p
    pwd = rev-parse --show-toplevel
    rb = rebase
    rba = rebase --abort
    rbc = rebase --continue
    rbi = rebase --interactive
    rs = restore --staged
    s = status
    ui = !gitui
